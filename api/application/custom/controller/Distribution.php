<?php
/**
 * Created by PhpStorm.
 * User: 李佳飞
 * Date: 2017/12/14 0014
 * Time: 16:02
 * 后台管理员为每个小程序设置分销，设置分销的只有小程序有支付的时候，才能启用分销
 */
namespace app\custom\controller;

class Distribution extends Action{
    
    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this -> data = input('post.','','htmlspecialchars');
        if(!isset($this->data['appid'])){
            $return['code'] = 10100;
            $return['msg_test'] = 'appid参数值缺失';
            echo json_encode($return);exit;
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10200;
            $return['msg_test'] = 'appid格式不正确';
            echo json_encode($return);exit;
        }
        $custom_id = db('app') -> where(['appid' => $this->data['appid']]) -> value('custom_id');
        if($custom_id != $this->custom->id){
            $return['code'] = 10300;
            $return['msg_test'] = '当前app不是这个用户的';
            echo json_encode($return);exit;
        }
    }
    //分销详情
    public function getDistInfo() {
        $info = db('dist_rule')
            -> field('switch,level,scale,type,good_list,is_withdraw')
            ->where(['appid' => $this->data['appid']]) -> find();
        if ($info) {
            $return['code'] = 10000;
            $return['msg_test'] = '查询成功';
            $return['data'] = $info;
            return json($return);
        } else {
            $return['code'] = 10010;
            $return['msg_test'] = '查询失败,请稍后重试';
            return json($return);
        }
        
    }
    //分销设置
    public function setDist() {
        if (!isset($this->data['is_withdraw'])) {
            $return['code'] = 10005;
            $return['msg_test'] =  '提现is_withdraw不能为空';
            return  json($return);
        }
        if (!isset($this->data['type'])) {
            $return['code'] = 10004;
            $return['msg_test'] =  '商品分销type不能为空';
            return  json($return);
        }
        if (!isset($this->data['scale'])) {
            $return['code'] = 10003;
            $return['msg_test'] =  '分销比例scale不能为空';
            return  json($return);
        }
        if (!isset($this->data['level'])) {
            $return['code'] = 10002;
            $return['msg_test'] =  '分销等级level不能为空';
            return  json($return);
        }
        if (!isset($this->data['switch'])) {
            $return['code'] = 10001;
            $return['msg_test'] =  '分销switch不能为空';
            return  json($return);
        }
        $this->data['custom_id'] = $this->custom['id'];
        $info = db('dist_rule')->field('id')->where(['custom_id' => $this->data['custom_id']])->find();
        if (!$info) {
            unset($this->data['session_key']);
            $res = db('dist_rule')->insert($this->data);
            if($res){
                $return['code'] = 10000;
                $return['msg'] = '保存成功';
                return json($return);
            }else{
                $return['code'] = 10010;
                $return['msg'] = '网络错误,保存失败';
                return json($return);
            }
        } else {
            unset($this->data['session_key']);
            $res = model('dist_rule')->allowField(true)->where(['appid' => $this->data['appid']])->update($this->data);
            if(isset($res)){
                $return['code'] = 10000;
                $return['msg'] = '保存成功';
                return json($return);
            }else{
                $return['code'] = 10010;
                $return['msg'] = '网络错误,保存失败';
                return json($return);
            }
        }
    }
    
}