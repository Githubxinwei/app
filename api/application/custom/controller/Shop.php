<?php
/**
 * Created by PhpStorm.
 * User: 李佳飞
 * Date: 2017/9/27 0027
 * Time: 11:40
 * 商品，分类的相关接口
 */
namespace app\custom\controller;
use think\Db;

class Shop extends Action{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this -> data = input('post.','','htmlspecialchars');
    }

    /**
     *获取用户的商品别表
     * appid,page,number,cate_id
     */
    public function getUserGoods(){
        if(!isset($this -> data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = '当前小程序的appid没有';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $custom_id = $this -> custom -> id;
        $is_true = db('app') -> where(['appid' => $this -> data['appid']]) -> find();
        if(!$is_true){
            $return['code'] = 10003;
            $return['msg_test'] = '当前用户没有此小程序,也就是appid不对';
            return json($return);
        }
        if($is_true['custom_id'] != $this->custom->id){
            $return['code'] = 10005;
            $return['msg_test'] = '当前小程序不是这个用户的';
            return json($return);
        }
        $page = isset($this -> data['page']) ? $this -> data['page'] : 1;
        $limit = isset($this -> data['number']) ? $this -> data['number'] : 15;
        $where = '';
        if(isset($this -> data['cate_id'])){
            $cate_id = $this -> data['cate_id'] * 1;
            $where = "FIND_IN_SET($cate_id,cid)";
        }
        $number = db('goods') -> where(['appid' => $this -> data['appid']]) -> count();
        $info = db('goods')
            -> where(['appid' => $this -> data['appid']])
            -> where($where)
            -> page($page,$limit)
            -> order('id desc')
            -> select();
        if($info){
            $return['code'] = 10000;
            $return['data'] = ['number' => $number,'info' => $info];
            $return['msg_test'] = '成功了';
            return json($return);
        }else{
            $return['code'] = 10004;
            $return['msg'] = '查询失败,请稍后重试';
            return json($return);
        }

    }

    /**
     * 删除用户的商品
     * good_id,appid
     */
    public function delUserGoods(){
        if(!isset($this -> data['good_id']) || !isset($this -> data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = '缺少商品id或缺少appid';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $res = db('goods') -> where(['id' => $this -> data['good_id'] * 1,'custom_id' => $this->custom->id]) -> delete();

        if($res){
            $return['code'] = 10000;
            $return['msg'] = '删除成功';
            $return['msg_test'] = '删除成功';
            return json($return);
        }else{
            $return['code'] = 10003;
            $return['msg'] = '删除数据失败';
            $return['msg_test'] = 'appid错误，或者good_id错误';
            return json($return);
        }
    }


    /**
     * 商品名称
     * appid,name,price,spec,pic
     */
    public function createGoods(){
        if(!isset($this -> data['name']) || (!isset($this -> data['price']) && !isset($this -> data['spec'])) || !isset($this -> data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = '请求参数不存在';
            return json($return);
        }
        //商品的名字和价格是必须的
        if(isset($this -> data['price'])){
            if($this -> data['price'] && $this -> data['price'] <= 0){
                $return['code'] = 10004;
                $return['msg'] = '请填写正确的商品价格';
                return json($return);
            }
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10006;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }

        $is_true = db('app') -> where(['appid' => $this -> data['appid']]) -> find();
        if(!$is_true){
            $return['code'] = 10011;
            $return['msg_test'] = '当前用户没有此小程序,也就是appid不对';
            return json($return);
        }
        if($is_true['custom_id'] != $this -> custom->id){
            $return['code'] = 10011;
            $return['msg_test'] = '当前小程序不是这个用户的';
            return json($return);
        }
        //如果上传图片，判断图片是否是十个
        if(isset($this -> data['pic'])){
            $pic_number = count(explode(',',$this -> data['pic']));
            if($pic_number > 10){
                $return['code'] = 10007;
                $return['msg'] = '一个商品最多上传10张图片';
                return json($return);
            }
        }
        if(isset($this -> data['desc'])){
            if(mb_strlen($this -> data['desc'],'utf8') > 600){
                $return['code'] = 10008;
                $return['msg'] = '商品的简介最多600字';
                return json($return);
            }
        }
        $this -> data['create_time'] = time();
        $this -> data['custom_id'] = $this -> custom -> id;
        if(isset($this -> data['spec'])){
            $this -> data['spec'] = $_POST['spec'];
            $info = json_decode($this -> data['spec'],true);
            if(is_null($info)){
                $return['code'] = 10009;
                $return['msg_test'] = '数据格式不正确';
                return json($return);
            }
        }
       $res= model('goods') ->allowField(true)-> save($this -> data);
        if($res){
            $return['code'] = 10000;
            $return['data'] = ['good_id' => model('goods')->id];
            $return['msg'] = '添加成功';
            return json($return);
        }else{
            $return['code'] = 10010;
            $return['msg'] = '添加商品失败';
            return json($return);
        }
    }


    /**
     * 获取商品，进行修改
     * appid,good_id
     */
    public function getUserGoodById(){
        if(!isset($this -> data['appid']) || !isset($this -> data['good_id'])){
            $return['code'] = 10001;
            $return['msg_test'] = '参数值缺失';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $info = db('goods') -> where(['id' => $this -> data['good_id']*1]) -> find();
        if($info){
            if($info['custom_id'] != $this->custom->id){
                $return['code'] = 10004;
                $return['msg_test'] = '不是这个商户的';
                return json($return);
            }
            $return['code'] = 10000;
            $return['data'] = $info;
            $return['msg'] = '';
            $return['msg_test'] = '查询成功';
            return json($return);
        }else{
            $return['code'] = 10003;
            $return['msg'] = '查询数据失败';
            $return['msg_test'] = 'appid不对或good_id不对';
            return json($return);
        }
    }

    /**
     * 修改商品
     */
    public function updateUserGood(){
        if(!isset($this -> data['appid']) || !isset($this -> data['good_id']) || !isset($this -> data['name']) || (!isset($this -> data['price']) && !isset($this -> data['spec']))){
            $return['code'] = 10001;
            $return['msg_test'] = '参数值缺失';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }

        //商品的名字和价格是必须的
        if(isset($this -> data['price'])){
            if($this -> data['price'] && $this -> data['price'] <= 0){
                $return['code'] = 10004;
                $return['msg'] = '请填写正确的商品价格';
                return json($return);
            }
        }

        //如果上传图片，判断图片是否是十个
        if(isset($this -> data['pic'])){
            $pic_number = count(explode(',',$this -> data['pic']));
            if($pic_number > 10){
                $return['code'] = 10006;
                $return['msg'] = '一个商品最多上传10张图片';
                return json($return);
            }
        }
        if(isset($this -> data['desc'])){
            if(mb_strlen($this -> data['desc'],'utf8') > 600){
                $return['code'] = 10007;
                $return['msg'] = '商品的简介最多600字';
                return json($return);
            }
        }
        if(isset($this -> data['spec'])){
            $this -> data['spec'] = $_POST['spec'];
            $info = json_decode($this -> data['spec'],true);
            if(is_null($info)){
                $return['code'] = 10009;
                $return['msg_test'] = '数据格式不正确';
                return json($return);
            }
        }
        $good_id = $this -> data['good_id'];
        unset($this -> data['good_id']);
        $good_id = db('goods') -> where(['id' => $good_id,'custom_id' => $this->custom->id])  -> update($this -> data);
        if($good_id){
            $return['code'] = 10000;
            $return['msg'] = '修改成功';
            return json($return);
        }else{
            $return['code'] = 10009;
            $return['msg'] = '修改商品失败';
            $return['msg_test'] = '修改商品失败,appid或good_id不正确';
            return json($return);
        }

    }

    /**
     * 获取商品里面的分类信息和每个分类所对应的商品数量
     * appid,page,number
     */
    public function getCateList(){
        $custom_id = $this -> custom -> id;
        if(!isset($this -> data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = '当前小程序的appid没有';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $is_true = db('app') -> where(['appid' => $this -> data['appid']]) -> find();
        if(!$is_true){
            $return['code'] = 10003;
            $return['msg_test'] = '当前用户没有此小程序,也就是appid不对';
            return json($return);
        }
        if($is_true['custom_id'] != $this -> custom->id){
            $return['code'] = 10004;
            $return['msg_test'] = '小程序不是这个用户的';
            return json($return);
        }
        $page = isset($this -> data['page']) ? $this -> data['page'] : 1;
        $limit = isset($this -> data['number']) ? $this -> data['number'] : 15;
        $number = db('goods_cate') -> where(['appid' => $this -> data['appid'],'custom_id' => $custom_id]) -> count();
        $info = db("goods_cate")
            -> alias('a')
            -> field('a.id,a.code,a.name,count(b.id) as cate_number')
            -> join("__GOODS__ b",'FIND_IN_SET(a.id,b.cid)','LEFT')
            -> where(['a.appid' => $this -> data['appid'],'a.custom_id' => $custom_id])
            -> page($page,$limit)
            -> order('a.code desc')
            -> group('a.id')
            -> select();
        $return['code'] = 10000;
        $return['data'] = ['number' => $number,'info' => $info];
        $return['msg'] = '';
        $return['msg_test'] = '成功了';
        return json($return);
    }

    public function delCateById(){
        if(!$this -> data || !isset($this -> data['appid']) || !isset($this -> data['cate_id'])){
            $return['code'] = 10001;
            $return['msg_test'] = '删除数据，传递cate_id和appid';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $cate_id = $this -> data['cate_id'];

        $res = db('goods_cate') -> where(['id' => $cate_id,'custom_id' => $this->custom->id]) -> delete();
        if($res){
            $return['code'] = 10000;
            $return['msg'] = '删除成功';
            return json($return);
        }else{
            $return['code'] = 10003;
            $return['msg'] = '删除失败';
            $return['msg_test'] = '当前的分类id不是这个人的，或者appid传递错误';
            return json($return);
        }
    }

    /**
     * 修改分类的名字
     * cate_id,name
     */
    public function updateCateName(){
        if(!isset($this -> data['cate_id']) || !isset($this -> data['name']) || !isset($this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = '参数值缺失';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $info['id'] = $this -> data['cate_id'];
        $info['name'] = $this -> data['name'];
        $res = model('goods_cate') -> where(['id' => $this -> data['cate_id'],'custom_id' => $this->custom->id]) -> update($info);
        if($res){
            $return['code'] = 10000;
            $return['msg'] = '修改成功';
            return json($return);
        }else{
            $return['code'] = 10003;
            $return['msg'] = '修改失败,请稍后重试';
            $return['msg_test'] = '更新数据库失败，appid或cate_id错了';
            return json($return);
        }
    }


    /**
     * 增加分类信息
     * appid name
     */
    public function createCate(){
        $custom_id = $this -> custom -> id;
        if(!isset($this -> data['appid']) || !isset($this -> data['name'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid不存在或者分类名字不存在';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10003;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $is_true = db('app') -> where(['appid' => $this -> data['appid']]) -> find();
        if(!$is_true){
            $return['code'] = 10004;
            $return['msg_test'] = '当前用户没有此小程序,也就是appid不对';
            return json($return);
        }
        if($is_true['custom_id'] != $this->custom->id){
            $return['code'] = 10006;
            $return['msg_test'] = '当前小程序不是这个用户的';
            return json($return);
        }
        $code = db('goods_cate') -> where(['appid' => $this -> data['appid'],'custom_id' => $custom_id]) -> max('code');
        $this -> data['code'] = $code + 1;
        $this -> data['custom_id'] = $custom_id;
        $cate_id = db('goods_cate') -> insertGetId($this -> data);
        if($cate_id){
            $return['code'] = 10000;
            $return['data'] = ['cate_id' => $cate_id];
            $return['msg'] = '添加成功';
            return json($return);
        }else{
            $return['code'] = 10005;
            $return['msg'] = '添加分类信息失败';
            return json($return);
        }
    }


    /**
     * 分类的顺序调整
     * cate_id1 cate_id2 appid
     */
    public function setCateSort(){
        if(!isset($this->data['cate_id1']) || !isset($this->data['cate_id2'])|| !isset($this->data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = 'appid不存在或者分类id不存在';
            return json($return);
        }
        $code1 = db('goods_cate') -> where(['id' => $this->data['cate_id1'],'custom_id' => $this -> custom->id]) -> value('code');
        $code2 = db('goods_cate') -> where(['id' => $this->data['cate_id2'],'custom_id' => $this -> custom->id]) -> value('code');
        if(!isset($code1) || !isset($code2)){
            $return['code'] = 10002;
            $return['msg_test'] = '两个id可能传递错误，或者appid不正确';
            return json($return);
        }
        Db::startTrans();
        try{
            $res1 = db('goods_cate') -> where(['id' => $this->data['cate_id1']]) -> setField('code',$code2);
            $res2 = db('goods_cate') -> where(['id' => $this->data['cate_id2']]) -> setField('code',$code1);
            if($res1 && $res2){
                Db::commit();
                $return['code'] = 10000;
                $return['msg_test'] = '成功了';
                return json($return);
            }
        }catch (\Exception $e){
            Db::rollback();
            $return['code'] = 10003;
            $return['msg_test'] = '更新是出错了';
            return json($return);
        }


    }




}