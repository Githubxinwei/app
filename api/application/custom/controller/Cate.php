<?php
/**
 * Created by PhpStorm.
 * User: 宋妍妍
 * Date: 2017/10/25
 * Time: 09:50
 * * 预约，分类的相关接口
 */
namespace app\custom\controller;
use think\Db;

class Cate extends Action{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this -> data = input('post.','','htmlspecialchars');
    }

    /**
     * 商品分类的顺序调整
     * cate_id1 cate_id2 appid
     */
    public function setCateSort(){
        if(!isset($this->data['cate_id1']) || !isset($this->data['cate_id2'])|| !isset($this->data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = 'appid不存在或者分类id不存在';
            return json($return);
        }
        $code1 = db('subscribe_cate') -> where(['id' => $this->data['cate_id1'],'custom_id' => $this -> custom->id]) -> value('code');
        $code2 = db('subscribe_cate') -> where(['id' => $this->data['cate_id2'],'custom_id' => $this -> custom->id]) -> value('code');
        if(!isset($code1) || !isset($code2)){
            $return['code'] = 10002;
            $return['msg_test'] = '两个id可能传递错误，或者appid不正确';
            return json($return);
        }
        Db::startTrans();
        try{
            $res1 = db('subscribe_cate') -> where(['id' => $this->data['cate_id1']]) -> setField('code',$code2);
            $res2 = db('subscribe_cate') -> where(['id' => $this->data['cate_id2']]) -> setField('code',$code1);
            if($res1 && $res2){
                Db::commit();
                $return['code'] = 10000;
                $return['msg_test'] = '成功了';
                return json($return);
            }
        }catch (\Exception $e){
            Db::rollback();
            $return['code'] = 10003;
            $return['msg_test'] = '更新是出错了';
            return json($return);
        }


    }

    /*预约分类添加
     appid name
    */
    public function  subscribeCate(){

        $custom_id = $this -> custom -> id;
        if(!isset($this -> data['appid']) || !isset($this -> data['name'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid不存在或者预约名字不存在';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10003;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $is_true = db('app') -> where(['appid' => $this -> data['appid']]) -> find();
        if(!$is_true){
            $return['code'] = 10004;
            $return['msg_test'] = '当前用户没有此预约程序,也就是appid不对';
            return json($return);
        }
        if($is_true['custom_id'] != $this->custom->id){
            $return['code'] = 10006;
            $return['msg_test'] = '当前预约程序不是这个用户的';
            return json($return);
        }
        $code = db('subscribe_cate') -> where(['appid' => $this -> data['appid'],'custom_id' => $custom_id]) -> max('code');
        $data['code'] = $code + 1;
        $data['custom_id'] = $custom_id;
        $data['name'] = $this->data['name'];
        $data['appid'] = $this->data['appid'];
        $cate_id = db('subscribe_cate') -> insertGetId($data);
        if($cate_id){
            $return['code'] = 10000;
            $return['data'] = ['cate_id' => $cate_id];
            $return['msg'] = '添加分类成功';
            return json($return);
        }else{
            $return['code'] = 10005;
            $return['msg'] = '添加分类信息失败';
            return json($return);
        }

    }

    /*预约分类列表
    */
    public function  sublistCate(){

        if(!isset($this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid不存在或者预约名字不存在';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10003;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $page = isset($this -> data['page']) ? $this -> data['page'] : 1;
        $limit = isset($this -> data['number']) ? $this -> data['number'] : 15;
        $number = db('subscribe_cate') -> where(['appid' =>($this -> data['appid']),'custom_id' => $this->custom->id])->count();
        $info = db("goods_cate")
            ->where(['appid' =>($this -> data['appid']),'custom_id' => $this->custom->id])
            ->page($page,$limit)
            ->order('code desc')
            ->select();

        $return['code'] = 10000;
        $return['data'] = ['number' => $number,'info' => $info];
        $return['msg'] = '';
        $return['msg_test'] = '成功了';
        return json($return);

    }

    /**
     * 修改预约分类的名字
     * cate_id,name
     */
    public function updatesubCate(){

        if(!isset($this -> data['cate_id']) || !isset($this -> data['name']) || !isset($this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = '参数值缺失';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10001;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $info['id'] = $this -> data['cate_id'];
        $info['name'] = $this -> data['name'];
        $res = model('subscribe_cate') -> where(['id' => $this -> data['cate_id'],'custom_id' => $this->custom->id]) -> update($info);
        if($res){
            $return['code'] = 10000;
            $return['msg'] = '修改成功';
            return json($return);
        }else{
            $return['code'] = 10003;
            $return['msg'] = '修改失败,请稍后重试';
            $return['msg_test'] = '更新数据库失败，appid或cate_id错了';
            return json($return);
        }
    }

    /*删除预约分类
     id
    */
    public function delsubCateById(){

        if(!$this -> data || !isset($this -> data['appid']) || !isset($this -> data['cate_id'])){
            $return['code'] = 10001;
            $return['msg_test'] = '删除数据，传递cate_id和appid';
            return json($return);
        }
        if(!preg_match("/^\d{8}$/",$this -> data['appid'])){
            $return['code'] = 10002;
            $return['msg_test'] = 'appid是一个8位数';
            return json($return);
        }
        $cate_id = $this -> data['cate_id'];

        $res = db('subscribe_cate') -> where(['id' => $cate_id,'custom_id' => $this->custom->id]) -> delete();
        if($res){
            $return['code'] = 10000;
            $return['msg'] = '删除成功';
            return json($return);
        }else{
            $return['code'] = 10003;
            $return['msg'] = '删除失败';
            $return['msg_test'] = '当前的分类id不是这个人的，或者appid传递错误';
            return json($return);
        }
    }


}